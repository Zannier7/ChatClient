/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package negocio;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;

/**
 *
 * @author user
 */
public class chat extends javax.swing.JFrame {

    /**
     * Creates new form chat
     */
    private Socket socket;

    private int puerto;
    private String host;
    private String nombre;
    private String contraseña;
    DataOutputStream salidaDatos;

    public chat() {
        super("Chat");
        Login log = new Login(this, true);

        host = log.getHost();
        nombre = log.getNombre();
        contraseña = log.getContraseña();
        puerto = log.getPuerto();
        initComponents();
        txtareamsg.setEnabled(false);

        System.out.println("quieres conectarte a" + host + " en el puerto " + puerto + " con el nombre de ususario: " + nombre + ".");

        try {
            socket = new Socket(host, puerto);
            salidaDatos = new DataOutputStream(socket.getOutputStream());
            salidaDatos.writeUTF("validar");
            salidaDatos.writeUTF(nombre);
            salidaDatos.writeUTF(contraseña);
        } catch (IOException ex) {
            System.err.println("No se ha podido conectar con el servidor (" + ex.getMessage() + ").");
            EstablishConnection();
        }
    }

    public void EstablishConnection() {
        Login log = new Login(this, true);

        host = log.getHost();
        nombre = log.getNombre();
        contraseña = log.getContraseña();
        puerto = log.getPuerto();
        initComponents();
        txtareamsg.setEnabled(false);

        System.out.println("quieres conectarte a " + host + " en el puerto " + puerto + " con el nombre de ususario: " + nombre + ".");

        try {
            socket = new Socket(host, puerto);
            salidaDatos = new DataOutputStream(socket.getOutputStream());
            salidaDatos.writeUTF("validar");
            salidaDatos.writeUTF(nombre);
            salidaDatos.writeUTF(contraseña);
        } catch (Exception ex) {
            System.err.println("No se ha podido conectar con el servidor (" + ex.getMessage() + ").");
            EstablishConnection();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfmensaje = new javax.swing.JTextField();
        enviarmsg = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtareamsg = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        enviarmsg.setText("ENVIAR");
        enviarmsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarmsgActionPerformed(evt);
            }
        });

        txtareamsg.setEditable(false);
        txtareamsg.setColumns(20);
        txtareamsg.setLineWrap(true);
        txtareamsg.setRows(5);
        txtareamsg.setWrapStyleWord(true);
        txtareamsg.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jScrollPane2.setViewportView(txtareamsg);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(enviarmsg, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfmensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(tfmensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(enviarmsg, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enviarmsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarmsgActionPerformed
        try {
            salidaDatos.writeUTF(tfmensaje.getText());
            tfmensaje.setText("");
        } catch (IOException ex) {
            System.err.println("Error al intentar enviar un mensaje: " + ex.getMessage());
        }

    }//GEN-LAST:event_enviarmsgActionPerformed

    /**
     * @param args the command line arguments
     */
    public void ReceiveMessage() {
        DataInputStream entradaDatos = null;
        String message;
        try {
            entradaDatos = new DataInputStream(socket.getInputStream());
        } catch (IOException ex) {
            System.err.println("Error al crear el stream de entrada: " + ex.getMessage());
        } catch (NullPointerException ex) {
            System.err.println("El socket no se creo correctamente. ");
        }
        boolean conectado = true;
        while (conectado) {
            try {
                message = entradaDatos.readUTF();
                if (message.equals("incorrecto")) {
                    EstablishConnection();
                    entradaDatos = new DataInputStream(socket.getInputStream());
                } else if(!"".equals(message)){
                    txtareamsg.append(message + System.lineSeparator());
                }
            } catch (IOException ex) {
                System.err.println("Error al leer del stream de entrada: " + ex.getMessage());
                conectado = false;
            } catch (NullPointerException ex) {
                System.err.println("El socket no se creo correctamente. ");
                conectado = false;
            }
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        chat ch = new chat();
        ch.setVisible(true);
        ch.ReceiveMessage();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton enviarmsg;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField tfmensaje;
    private javax.swing.JTextArea txtareamsg;
    // End of variables declaration//GEN-END:variables
}
